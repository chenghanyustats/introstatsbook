# Data Visualization {#sec-data-graphics}

```{r packages, echo=FALSE, message=FALSE, warning=FALSE, purl=FALSE}
library(tidyverse)
library(fontawesome)
library(fields)
library(microbenchmark)
library(openintro)
library(emoji)
library(kableExtra)
``` 



## Descriptive Statistics (Data Summary)

- Before doing inferential statistics, let's first learn to understand our data by describing or summarizing it using a **table**, **graph**, or some important **values**, so that appropriate methods can be performed for better inference results.

```{r, echo=FALSE, out.width="100%", fig.align='center', eval=FALSE, purl=FALSE}
knitr::include_graphics("./images/img-data/stats_framework_new.jpg")
```



```{r data_type, cache=TRUE, echo=FALSE, out.width="70%", purl=FALSE, fig.align='center'}
par(mar = c(0,0,0,0))
plot(c(-0.15, 1.15), c(0, 0.9), type = 'n', axes = FALSE)

text(0.6, 0.85, 'Statistics', font = 2, cex = 1.2)
rect(xleft = 0.4, ybottom = 0.8, xright = 0.8, ytop = 0.9)

text(0.25, 0.55, 'Descriptive Statistics', font = 2, cex = 1.2, col = "red")
rect(-0.05, 0.5, 0.55, 0.6)
arrows(x0 = 0.45, y0 = 0.78, x1 = 0.34, y1 = 0.62, length = 0.08)

text(0.9, 0.55, 'Inferential Statistics', font = 2, cex = 1.2, col = "red")
rect(0.6, 0.5, 1.2, 0.6)
arrows(0.76, 0.78, 0.85, 0.62, length = 0.08)


text(-0.1, 0.23, 'Frequency', font = 2, col = "blue")
text(-0.1, 0.17, 'Table', font = 2, col = "blue")
# rect(-0.15, 0.15, -0.05, 0.25)
arrows(0.1, 0.5, -0.05, 0.25, length = 0.08)
# 
text(0.2, 0.2, 'Graphics', font = 2, col = "blue")
# rect(0.11, 0.15, 0.29, 0.25)
arrows(0.2, 0.5, .2, 0.25, length = 0.08)

text(0.45, 0.23, 'Numerical', font = 2, col = "blue")
text(0.45, 0.17, 'Measures', font = 2, col = "blue")
# rect(0.31, 0.15, 0.49, 0.25)
arrows(0.35, 0.5, .45, 0.25, length = 0.08)

# 
text(0.7, 0.2, 'Estimation', font = 2, col = "blue")
# rect(0.6, 0.15, 0.8, 0.25)
arrows(0.75, 0.5, 0.7, 0.25, length = 0.08)

text(1, 0.23, 'Hypothesis', font = 2, col = "blue")
text(1, 0.17, 'Testing', font = 2, col = "blue")
# rect(0.88, 0.15, 1.12, 0.25)
arrows(0.9, 0.5, 1, 0.26, length = 0.08)



text(1.1, 0.75, 'Probability', font = 2, col = "green4")
# rect(0.9, 0.7, 1.3, 0.8)
arrows(1.05, 0.73, 0.9, 0.61, length = 0.08)
```

## Frequency Table for Categorical Variable
- A **frequency table (frequency distribution)** lists variable values individually for categorical data along with their corresponding number of times occurred in the data (**frequencies** or **counts**).
- Frequency table for categorical data with $n$ the number of data values:

| Category name | Frequency     | Relative Frequency |
|:-------------:|:-------------:|:------------------:|
| $C_1$         | $f_1$         | $f_1/n$ |
| $C_2$         | $f_2$         | $f_2/n$ |
| ...           | ...           | ...     |
| $C_k$         | $f_k$         | $f_k/n$ |


- Example: A categorical variable **color** that has three categories

| Category name | Frequency     | Relative Frequency |
|:-------------:|:-------------:|:------------------:|
|  Red   `r emoji('red_circle')`       | 8             | 8/50 = 0.16    |
|  Blue  `r emoji('blue_circle')`       | 26            | 26/50 = 0.52   |
|  Black  `r emoji('black_circle')`      | 16            | 16/50 = 0.32   |


### Categorical Frequency Table in R: `loan50` [OI]

```{r loan50, highlight.output = c(1, 5)}
# install.packages("openintro")
library(openintro)
str(loan50)
```

### Categorical Frequency Table in R: `homeownership`
```{r}
# 50 values (rent, mortgage, own) of categorical homeownership in loan50 data
(x <- loan50$homeownership)
## frequency table
table(x)
```

:::{.callout-note icon=false}

## If we want to create a frequency table shown in definition, which R data structure we can use?

:::

```{r}
freq <- table(x)
rel_freq <- freq / sum(freq)
cbind(freq, rel_freq)
```

### Visualizing a Frequency Table: Bar Chart

```{r, echo=-1}
par(mar = c(4, 4, 2, 1))
barplot(height = table(x), main = "Bar Chart", xlab = "Homeownership")
```

### Pie Chart
```{r, echo=2}
par(mar = c(0, 0, 1, 0))
pie(x = table(x), main = "Pie Chart")
```

## Frequency Distribution for Numerical Variables
- Divide the data into $k$ **non-overlapping groups of intervals** (**classes**).
- Convert the data into $k$ categories with an associated **class interval**.
- Count the number of measurements falling in a given class interval (**class frequency**).

| Class       | Class Interval  | Frequency     | Relative Frequency |
|:-----------:|:---------------:|:-------------:|:------------------:|
| $1$         | $[a_1, a_2]$    | $f_1$          | $f_1/n$ |
| $2$         | $(a_2, a_3]$    | $f_2$          | $f_2/n$ |
| ...         |    ...          | ...            | ...     |
| $k$         | $(a_k, a_{k+1}]$| $f_k$          | $f_k/n$ |

- $(a_2 - a_1) = (a_3 - a_2) = \cdots = (a_{k+1} - a_k)$. **All class widths are the same**!

:::{.callout-note icon=false}

## Can our grade conversion be used for creating a frequency distribution?

:::


```{r, echo=FALSE, fig.align='center', out.height="100%", purl=FALSE}
letter <- c("A", "A-", "B+", "B", "B-", "C+", "C", "C-",
                       "D+", "D", "F")
percentage <- c("[94, 100]", "[90, 94)", "[87, 90)", "[83, 87)", "[80, 83)",
                "[77, 80)", "[73, 77)", "[70, 73)", 
                "[65, 70)", "[60, 65)", "[0, 60)")
grade_dist <- data.frame(Grade = letter, Percentage = percentage)
library(kableExtra)
knitr::kable(grade_dist, longtable = TRUE, format = "html", align = 'l') %>% kable_styling(position = "center", font_size = 28)
```

### Interest Rate in Data `loan50` [OI]
```{r}
(int_rate <- round(loan50$interest_rate, 1))
```


```{r, echo=FALSE, out.width="50%", purl=FALSE, fig.align='center'}
knitr::include_graphics("./images/img-data/int_rate.jpeg")
```


### Frequency Distribution of Interest Rate

:::{layout-ncol=2}

```{r, echo=FALSE, purl=FALSE}
k <- 9
class_width <- 2.5
lower_limit <- 5

class_boundary <- lower_limit + 0:k * class_width
class_int <- paste(paste0(class_boundary[1:k], "%"),
                   paste0(class_boundary[2:(k+1)], "%"), 
                   sep = "-")

freq_info <- hist(int_rate, 
                  breaks = class_boundary, 
                  plot = FALSE)
freq_dist <- data.frame("Class" = as.character(1:k), 
                        "Class_Intvl" = class_int, 
                        "Freq" = freq_info$counts, 
                        "Rel_Freq" = round(freq_info$counts / length(int_rate), 2))
print(freq_dist, row.names = FALSE)
```


- All class widths are the same!
- Number of classes should not be too big or too small.
- The *lower* limit of the 1st class **should not be greater** than the *minimum* value of the data.
- The *upper* limit of the last class **should not be smaller** than the *maximum* value of the data.


```{r}
range(int_rate)
```

:::

:::{.callout-tip icon=false}

## Wonder how we choose the number of classes or the class width?

:::

:::{.callout-note icon=false}

## R decides the number for us when we visualize the frequency distribution by a **histogram**.

:::

### Visualizing Frequency Distribution by a Histogram

:::{layout-ncol=2}

**Use default breaks (no need to specify)**

**Use customized breaks**

```{r freq_hist, tidy=FALSE, echo=-1, out.width="90%"}
par(mar = c(4, 4, 2, 1))
hist(x = int_rate, 
     xlab = "Interest Rate (%)",
     main = "Hist. of Int. Rate (Defualt)")
```


```{r out.width="90%"}
class_boundary
hist(x = int_rate, 
     breaks = class_boundary, #<<
     xlab = "Interest Rate (%)",
     main = "Hist. of Int. Rate (Ours)")
```

:::

## Skewness

- Key characteristics of distributions includes **shape**, **center** and **spread**.
- Skewness provides a way to summarize the shape of a distribution.
```{r skewness, echo=FALSE, out.width="68%", purl=FALSE, fig.align='center'}
normal_data <- rnorm(2000)
beta_data_right <- rbeta(2000, 2, 5)
beta_data_left <- rbeta(2000, 5, 2)
normal_data_2 <- rnorm(2000, mean = 5)
par(mfrow = c(2, 2))
par(mar = c(4, 4, 2, 1))
hist(beta_data_right, main = "Skewed to the right", xlab = "x", 
     col = "blue", border = "white", breaks = 20)
hist(normal_data, main = "Symmetric, unimodal", xlab = "x", 
     col = "blue", border = "white", breaks = 20)
hist(beta_data_left, main = "Skewed to the left", xlab = "x", 
     col = "blue", border = "white", breaks = 20)
hist(c(normal_data, normal_data_2), main = "Symmetric, bimodal", xlab = "x", 
     col = "blue", border = "white", breaks = 20)
```


## Remembering Skewness



:::{.callout-note icon=false}

## Is the interest rate histogram left skewed or right skewed?

:::

:::{layout-ncol=2}

```{r, echo=FALSE, out.width="100%", purl=FALSE}
par(mar = c(4, 4, 2, 1))
par(mfrow = c(1, 1))
hist(x = int_rate, breaks = class_boundary, xlab = "Interest Rate (%)", las = 1,
     main = "Histogram of Interest Rate")
```



```{r, echo=FALSE, out.width="70%",fig.align='center', fig.cap="Biostatistics for the Biological and Health Sciences p.53", purl=FALSE}

knitr::include_graphics("./images/img-data/skew.png")
```

:::


## Scatterplot for Two Numerical Variables
<!-- - We'll learn statistical methods for 2 numerical variables in Week 11. -->
- A **scatterplot** provides a case-by-case view of data for two numerical variables.

```{r, out.width="55%", fig.align='center'}
plot(x = loan50$total_income, y = loan50$loan_amount,
     xlab = "Total income", ylab = "Loan amount",
     pch = 16, col = 4)
```

